name: Deploy

on:
  push:
    branches:
      - develop
      - master
      - prod

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  RUN_REGION: us-central1
  REPO_NAME: ${{ github.event.repository.name }} # you can hardcode this if you want in the env variables
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true #https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/

jobs:
  lint:
      name: Linting and Quality Checks
      runs-on: ubuntu-latest

      steps:
        - name: Checkout the code
          uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pylint
            pip install umsgpack
            pip install pylint-fail-under
        - name: code review 
          run: find . -name '*.py' -print -exec pylint {} \;
        - name: Analyse code
          run: |
                for file in */*.py; do pylint "$file" --fail-under=0.0; done
  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: python -m pytest
  setup-build-deploy:
    name: Setup, Build, and Deploy
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name and save to service name
        shell: bash
        id: extract_branch
        run: echo "::set-env name=SERVICE_NAME::$(echo ${GITHUB_REF#refs/heads/})-$REPO_NAME"

      - name: Print service name
        run: echo $SERVICE_NAME

      - run: "echo '${{ secrets.SA_KEY_JSON }}' > credentials.json"
        shell: bash

      # Setup gcloud CLI
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.SA_KEY_JSON }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # Build and push image to Google Container Registry
      - name: Build
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"
      # Deploy image to Cloud Run
      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --region "$RUN_REGION" \
            --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
            --platform "managed" \
            --allow-unauthenticated
